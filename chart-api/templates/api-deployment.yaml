apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.servicename }}
  name: {{ .Values.servicename }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Values.servicename }}
      app.kubernetes.io/name: {{ .Values.servicename }}
      app: {{ .Values.servicename }}
  strategy:
    type: Recreate
  template:
    metadata:
    {{ if eq .Values.vault.kind "injector" }}
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-token: "true"
        vault.hashicorp.com/agent-inject-status: "update"
        vault.hashicorp.com/role: {{ .Values.serviceAccount.name | quote }}
        vault.hashicorp.com/secret-volume-path: "/app/secrets/"
      {{ if eq .Values.vault.status "kv_static_injector_template_file" }}
        vault.hashicorp.com/agent-inject-secret-schoolapp-mongodb-username: "internal/data/schoolapp/mongodb"
        vault.hashicorp.com/agent-inject-secret-schoolapp-mongodb-password: "internal/data/schoolapp/mongodb"
        # Notice the use of {{` {{some GO templating}} `}} the backticks and {{``}} is used to escape the templating so that helm doesn't error out when it tries to render the templating when it shouldn't. So it treats it as a literal string.
        vault.hashicorp.com/agent-inject-template-schoolapp-mongodb-username: |
          {{`{{- with secret "internal/data/schoolapp/mongodb" -}}
          {{ .Data.data.schoolapp_DB_USERNAME }}
          {{- end -}}
        vault.hashicorp.com/agent-inject-template-schoolapp-mongodb-password: |
          {{- with secret "internal/data/schoolapp/mongodb" -}}
          {{ .Data.data.schoolapp_DB_PASSWORD }}
          {{- end -}}`}}
      {{ end }}
    {{ end }}
      labels:
        app.kubernetes.io/instance: {{ .Values.servicename }}
        app.kubernetes.io/name: {{ .Values.servicename }}
        app: {{ .Values.servicename }}
    spec:
      containers:
        - image: {{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          {{ if eq .Values.vault.kind "csi" }}
          volumeMounts:
            - name: 'vault-db-creds'
              mountPath: '/app/secrets/'
              readOnly: true
          {{ end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.portAPI }}
              protocol: TCP
          env:
            - name: PORT
              value: {{ .Values.service.portAPI | quote }}
            - name: APP_VERSION
              value: {{ .Chart.AppVersion | quote }}
            - name: DB_NAME
              value: schoolappdb
            - name: COLLECTION_COURSES
              value: courses
            - name: COLLECTION_STUDENTS
              value: students
            - name: ENV
              value: PROD
            - name: CORS_PROD
              value: {{ .Values.CORS }}
            - name: VAULT_STATUS
              value: {{ .Values.vault.status }}
          name: {{ .Values.servicename }}
          resources: {}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.portAPI }}
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.portAPI }}
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
      {{ if eq .Values.vault.kind "csi" }}
      volumes:
        - name: vault-db-creds
          csi:
            driver: 'secrets-store.csi.k8s.io'
            readOnly: true
            volumeAttributes:
              secretProviderClass: 'schoolapp'
      {{ end }}
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      imagePullSecrets:
          - name: regcred  
      terminationGracePeriodSeconds: 30
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%